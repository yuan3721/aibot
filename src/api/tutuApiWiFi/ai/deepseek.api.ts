// 定义描述
// generated by protogen, do not modify it
// 注释：.api文件中通过标识符引用的本项目或其他项目中定义的信息
import {
    MsgHeader
} from "../common.api";

// 注释：枚举输出
// 会话结构
export class DeepSeekSession {
    "1": string; // 会话标识
    "2": string; // 最后一条消息
    "3": string; // 最后一条推理
    "4": string; // 最后一条发送者(user表示用户, assistant表示AI助手)
    "5": number; // 最后发送时间戳(毫秒)
    "6": string; // 第一条用户消息
    "7"?: number; // optional 用户标识，前端不使用
    "8"?: number; // optional 老用户标识，前端不使用
    id: string; // 会话标识
    lastMsg: string; // 最后一条消息
    lastReasoning: string; // 最后一条推理
    lastSender: string; // 最后一条发送者(user表示用户, assistant表示AI助手)
    lastSendTick: number; // 最后发送时间戳(毫秒)
    firstMsg: string; // 第一条用户消息
    uid?: number; // optional 用户标识，前端不使用
    oldUid?: number; // optional 老用户标识，前端不使用
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = obj["id"];
        this["2"] = obj["lastMsg"];
        this["3"] = obj["lastReasoning"];
        this["4"] = obj["lastSender"];
        this["5"] = obj["lastSendTick"];
        this["6"] = obj["firstMsg"];
        this["7"] = obj["uid"];
        this["8"] = obj["oldUid"];

        this.id = obj["1"];
        this.lastMsg = obj["2"];
        this.lastReasoning = obj["3"];
        this.lastSender = obj["4"];
        this.lastSendTick = obj["5"];
        this.firstMsg = obj["6"];
        this.uid = obj["7"];
        this.oldUid = obj["8"];

    }
}

// 商业化广告任务
export class AdTask {
    "1": string; // 分词原句
    "2": string[]; // 命中的词
    "3": string; // 唯一标识
    origin: string; // 分词原句
    keywords: string[]; // 命中的词
    uuid: string; // 唯一标识
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = obj["origin"];
         
        this["2"] = obj["keywords"]
        this["3"] = obj["uuid"];

        this.origin = obj["1"];
         
        this.keywords = obj["2"]
        this.uuid = obj["3"];

    }
}

// 消息
export class DeepSeekMessage {
    "1": string; // 消息标识
    "2": string; // 消息内容
    "3": string; // 推理内容
    "4": string; // 发送者(user表示用户, assistant表示AI助手)
    "5": number; // 发送时间戳(毫秒)
    "6"?: boolean; // optional 是否结束
    "7"?: boolean; // optional 是否忽略类型(欢迎语)
    "8"?: number; // optional 最后更新时间戳(毫秒)
    "9"?: number; // optional 消息码
    "10"?: boolean; // optional 是否包含联网
    "11"?: string; // optional ai消息内容
    "12": AdTask[]; // 商业化广告任务
    id: string; // 消息标识
    content: string; // 消息内容
    reasoning: string; // 推理内容
    sender: string; // 发送者(user表示用户, assistant表示AI助手)
    sendTick: number; // 发送时间戳(毫秒)
    end?: boolean; // optional 是否结束
    ignore?: boolean; // optional 是否忽略类型(欢迎语)
    updateTick?: number; // optional 最后更新时间戳(毫秒)
    code?: number; // optional 消息码
    online?: boolean; // optional 是否包含联网
    aiContent?: string; // optional ai消息内容
    adTasks: AdTask[]; // 商业化广告任务
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = obj["id"];
        this["2"] = obj["content"];
        this["3"] = obj["reasoning"];
        this["4"] = obj["sender"];
        this["5"] = obj["sendTick"];
        this["6"] = obj["end"];
        this["7"] = obj["ignore"];
        this["8"] = obj["updateTick"];
        this["9"] = obj["code"];
        this["10"] = obj["online"];
        this["11"] = obj["aiContent"];
        if (Array.isArray(obj["adTasks"])) {
            this["12"] = obj["adTasks"].map(v => new AdTask(v))
        }

        this.id = obj["1"];
        this.content = obj["2"];
        this.reasoning = obj["3"];
        this.sender = obj["4"];
        this.sendTick = obj["5"];
        this.end = obj["6"];
        this.ignore = obj["7"];
        this.updateTick = obj["8"];
        this.code = obj["9"];
        this.online = obj["10"];
        this.aiContent = obj["11"];
        if (Array.isArray(obj["12"])) {
            this.adTasks = obj["12"].map(v => new AdTask(v))
        }

    }
}

// 消息联网搜索信息
export class DeepSeekOnlineInfo {
    "1": string; // 网站名称
    "2": string; // 网站图标
    "3": number; // 索引
    "4": string; // 标题
    "5": string; // 链接
    SiteName: string; // 网站名称
    Icon: string; // 网站图标
    Index: number; // 索引
    Title: string; // 标题
    Url: string; // 链接
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = obj["SiteName"];
        this["2"] = obj["Icon"];
        this["3"] = obj["Index"];
        this["4"] = obj["Title"];
        this["5"] = obj["Url"];

        this.SiteName = obj["1"];
        this.Icon = obj["2"];
        this.Index = obj["3"];
        this.Title = obj["4"];
        this.Url = obj["5"];

    }
}

// protected n    module:tb-aiservern    获取会话列表n
export class ApiAIDeepSeekSessionsReq {
    "1": number;
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = obj["page"];

    }
}

export class AIDeepSeekSessionsResData {
    "1": DeepSeekSession[]; // 会话列表
    "2": number; // 总数量
    sessions: DeepSeekSession[]; // 会话列表
    total: number; // 总数量
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        if (Array.isArray(obj["sessions"])) {
            this["1"] = obj["sessions"].map(v => new DeepSeekSession(v))
        }
        this["2"] = obj["total"];

        if (Array.isArray(obj["1"])) {
            this.sessions = obj["1"].map(v => new DeepSeekSession(v))
        }
        this.total = obj["2"];

    }
}

export class ApiAIDeepSeekSessionsRes extends MsgHeader {
    data: AIDeepSeekSessionsResData;
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        super(obj);
        this.data = new AIDeepSeekSessionsResData(obj["5"]);

    }
}


// protected n    module:tb-aiservern    新建会话n
export class ApiAIDeepSeekNewSessionReq {
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
    }
}

export class AIDeepSeekNewSessionResData {
    "1": DeepSeekSession; // 会话信息
    session: DeepSeekSession; // 会话信息
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = new DeepSeekSession(obj["session"]);

        this.session = new DeepSeekSession(obj["1"]);

    }
}

export class ApiAIDeepSeekNewSessionRes extends MsgHeader {
    data: AIDeepSeekNewSessionResData;
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        super(obj);
        this.data = new AIDeepSeekNewSessionResData(obj["5"]);

    }
}


// protected n    module:tb-aiservern    获取消息列表n
export class ApiAIDeepSeekMessagesReq {
    "1": string; // 会话ID
    "2": string; // 最小消息ID
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = obj["sessionId"];
        this["2"] = obj["miniId"];

    }
}

export class AIDeepSeekMessagesResData {
    "1": DeepSeekMessage[]; // 消息列表
    messages: DeepSeekMessage[]; // 消息列表
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        if (Array.isArray(obj["messages"])) {
            this["1"] = obj["messages"].map(v => new DeepSeekMessage(v))
        }

        if (Array.isArray(obj["1"])) {
            this.messages = obj["1"].map(v => new DeepSeekMessage(v))
        }

    }
}

export class ApiAIDeepSeekMessagesRes extends MsgHeader {
    data: AIDeepSeekMessagesResData;
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        super(obj);
        this.data = new AIDeepSeekMessagesResData(obj["5"]);

    }
}


// protected n    module:tb-aiservern    删除会话n
export class ApiAIDeepSeekDelSessionReq {
    "1": string; // 会话ID
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = obj["sessionId"];

    }
}

export class AIDeepSeekDelSessionResData {
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
    }
}

export class ApiAIDeepSeekDelSessionRes extends MsgHeader {
    data: AIDeepSeekDelSessionResData;
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        super(obj);
        this.data = new AIDeepSeekDelSessionResData(obj["5"]);

    }
}


// protected n    module:tb-aiservern    发送消息n
export class ApiAIDeepSeekSendMessageReq {
    "1": string; // 会话ID
    "2": string; // 消息内容
    "3": boolean; // 是否深度
    "4": boolean; // 是否联网
    "5": boolean; // 是否进特征识别
    "6"?: string; // optional 实际提交给AI的内容，如果该字段无值，则会使用content字段给AI
    "7"?: string; // optional 来源
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = obj["sessionId"];
        this["2"] = obj["content"];
        this["3"] = obj["depth"];
        this["4"] = obj["internet"];
        this["5"] = obj["feature"];
        this["6"] = obj["aiContent"];
        this["7"] = obj["source"];

    }
}

export class AIDeepSeekSendMessageResData {
    "1": DeepSeekMessage; // 消息
    "2": string; // 响应消息ID
    message: DeepSeekMessage; // 消息
    resMsgId: string; // 响应消息ID
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = new DeepSeekMessage(obj["message"]);
        this["2"] = obj["resMsgId"];

        this.message = new DeepSeekMessage(obj["1"]);
        this.resMsgId = obj["2"];

    }
}

export class ApiAIDeepSeekSendMessageRes extends MsgHeader {
    data: AIDeepSeekSendMessageResData;
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        super(obj);
        this.data = new AIDeepSeekSendMessageResData(obj["5"]);

    }
}


// protected n    module:tb-aiservern    刷新消息n
export class ApiAIDeepSeekRefreshMessageReq {
    "1": string; // 消息Id
    "2": boolean; // 是否强行关闭消息
    "3": boolean; // 用户中断消息
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = obj["msgId"];
        this["2"] = obj["shutdown"];
        this["3"] = obj["break"];

    }
}

export class AIDeepSeekRefreshMessageResData {
    "1": DeepSeekMessage; // 消息
    message: DeepSeekMessage; // 消息
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = new DeepSeekMessage(obj["message"]);

        this.message = new DeepSeekMessage(obj["1"]);

    }
}

export class ApiAIDeepSeekRefreshMessageRes extends MsgHeader {
    data: AIDeepSeekRefreshMessageResData;
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        super(obj);
        this.data = new AIDeepSeekRefreshMessageResData(obj["5"]);

    }
}


// protected n    module:tb-aiservern    获取消息关联联网搜索信息n
export class ApiAIDeepSeekMessageOnlineInfosReq {
    "1": string; // 消息Id
    "2": string; // 会话标识
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = obj["msgId"];
        this["2"] = obj["sessionId"];

    }
}

export class AIDeepSeekMessageOnlineInfosResData {
    "1": DeepSeekOnlineInfo[]; // 联网搜索信息
    infos: DeepSeekOnlineInfo[]; // 联网搜索信息
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        if (Array.isArray(obj["infos"])) {
            this["1"] = obj["infos"].map(v => new DeepSeekOnlineInfo(v))
        }

        if (Array.isArray(obj["1"])) {
            this.infos = obj["1"].map(v => new DeepSeekOnlineInfo(v))
        }

    }
}

export class ApiAIDeepSeekMessageOnlineInfosRes extends MsgHeader {
    data: AIDeepSeekMessageOnlineInfosResData;
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        super(obj);
        this.data = new AIDeepSeekMessageOnlineInfosResData(obj["5"]);

    }
}



