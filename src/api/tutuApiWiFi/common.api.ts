// 定义描述
// generated by protogen, do not modify it
// 注释：.api文件中通过标识符引用的本项目或其他项目中定义的信息

// 注释：枚举输出
export enum CypherType {
    Default = "1", // 默认密钥
    Random = "2", // 随机密钥
}
// 厂商类型
export enum ChannelType {
    Getui = 1, // 个推
    Huawei = 2, // 华为
    Honor = 3, // 荣耀
    Xiaomi = 4, // 小米
    Vivo = 5, // vivo
    Oppo = 6, // oppo
    Meizu = 7, // 魅族
}
// taskcode映射
export enum TaskCodeReflect {
    Login = "login", // 手机登录@v1
    ConnFreeWifi = "connfree", // 连接蓝钥匙@v1
    Location = "location", // 获取位置权限@v1
    Notify = "notify", // 获取通知栏权限@v1
    Suspend = "suspend", // 获取悬浮窗权限@v1
    FreeMovie = "free_movie", // 解锁新剧@v1
    Sign = "sign", // 签到@v1
    WatchVideo = "watch_video", // 观看激励视频@v1
    ShareMovie = "share_movie", // 分享短剧@v1
    FirstCharge = "first_charge", // 完成首次充值@v1
    AccuCharge = "accu_charge", // 累计充值@v1
    FinishMovie = "finish_movie", // 完播短剧@v1
    AccuFinishAll = "accu_finish_all", // 当天累计完成全部每日任务@v1
    StrengthenWifi = "strengthen_wifi", // 加强WiFi信号强度
    Charge = "charge", // 完成一次充值
    ShareWifi = "share_wifi", // 分享wifi
    BackMovie = "back_movie", // 完成1次追剧
    ZxHotSpot = "zxHotSpot", // 会员专属热点
    WatchVideoAd = "watchVideoAd", // 观看激励视频广告
    ExitMovie = "exitMovie", // 流失节点免费金币
}
// 手机验证码类型
export enum VerifyCodeType {
    None = 0, // 未知
    Mob = 1, // Mob
    ZM = 2, // zm
}
// 金币交易来源
export enum CoinTradeSource {
    Charge = 1, // 充值
    Task = 2, // 完成任务
    Sign = 3, // 签到
    UnlockMovie = 4, // 解锁短剧-消耗金币
    BuyWatchMovieCard = 5, // 购买周期观影卡
    FreeCoinExpire = 6, // 金币过期
    ChargeFree = 7, // 充值赠送
    BuyMoviePackage = 8, // 购买包剧权益
    BuyMovieSeries = 9, // 购买剧集权益
}
// 分页参数
export class PageInfo {
    "1": number; // 标记
    "2": boolean; // 是否结束
    nextSeq: number; // 标记
    isEnd: boolean; // 是否结束
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = obj["nextSeq"];
        this["2"] = obj["isEnd"];

        this.nextSeq = obj["1"];
        this.isEnd = obj["2"];

    }
}

// 分页参数
export class PageInfoWithLong {
    "1": number; // 标记
    "2": boolean; // 是否结束
    "3": string; // 标记-H5兼容
    nextSeq: number; // 标记
    isEnd: boolean; // 是否结束
    nextSeqStr: string; // 标记-H5兼容
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = obj["nextSeq"];
        this["2"] = obj["isEnd"];
        this["3"] = obj["nextSeqStr"];

        this.nextSeq = obj["1"];
        this.isEnd = obj["2"];
        this.nextSeqStr = obj["3"];

    }
}

// 分页参数
export class PageInfoWithString {
    "1": string; // 标记
    "2": boolean; // 是否结束
    nextSeq: string; // 标记
    isEnd: boolean; // 是否结束
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = obj["nextSeq"];
        this["2"] = obj["isEnd"];

        this.nextSeq = obj["1"];
        this.isEnd = obj["2"];

    }
}

export class MsgHeader {
    "1": number;
    "2": string;
    code: number;
    message: string;
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = obj["code"];
        this["2"] = obj["message"];

        this.code = obj["1"];
        this.message = obj["2"];

    }
}

// Wifi ID标识
export class WifiId {
    "1": string; // ssid
    "2": string; // bssid
    "3"?: string; // optional 加密类型n!可为空!
    "4"?: number; // optional 热点信号强度
    ssid: string; // ssid
    bssid: string; // bssid
    capabilities?: string; // optional 加密类型n!可为空!
    rssi?: number; // optional 热点信号强度
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = obj["ssid"];
        this["2"] = obj["bssid"];
        this["3"] = obj["capabilities"];
        this["4"] = obj["rssi"];

        this.ssid = obj["1"];
        this.bssid = obj["2"];
        this.capabilities = obj["3"];
        this.rssi = obj["4"];

    }
}

// 位置
export class LocationInfo {
    "1": number; // 经度
    "2": number; // 纬度
    "3": number; // 海拔
    lng: number; // 经度
    lat: number; // 纬度
    asl: number; // 海拔
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = obj["lng"];
        this["2"] = obj["lat"];
        this["3"] = obj["asl"];

        this.lng = obj["1"];
        this.lat = obj["2"];
        this.asl = obj["3"];

    }
}

// APP端用户基础信息
export class DeviceInfo {
    "1": string; // 客户端的deviceId,有数盟用数盟ID,没有本地生成
    "2"?: string; // optional imei
    "3"?: string; // optional meid
    "4"?: string; // optional 品牌
    "5"?: string; // optional 制造商
    "6"?: string; // optional 手机型号 如:MI13
    "7"?: string; // optional 操作系统类型 Android IOS
    "8"?: string; // optional 操作系统版本
    "9"?: string; // optional 渠道号
    "10"?: IspInfo[]; // optional isp 相关 会变
    "11"?: string; // optional 广告平台生成id
    "12"?: string; // optional 马甲包标识
    "13"?: string; // optional AppId 如:TT0066
    "50"?: string; // optional sim卡信息
    "51"?: string; // optional 屏幕高度
    "52"?: string; // optional 屏幕宽度
    "53"?: string; // optional 操作系统指纹信息
    "54"?: string; // optional 安卓api版本
    "55"?: string; // optional 上报android display（如NOH-AN00 2.0.0.268(C00E230R6P2)）参数
    "56"?: string; // optional 是否为鸿蒙系统,0:非鸿蒙,1:鸿蒙
    "57"?: string; // optional 鸿蒙版本
    "61"?: string; // optional ios IDFA标记
    "62"?: string; // optional ios IDFV标记
    "63"?: string; // optional ios deviceToken标记
    deviceId: string; // 客户端的deviceId,有数盟用数盟ID,没有本地生成
    imei?: string; // optional imei
    meid?: string; // optional meid
    brand?: string; // optional 品牌
    manufactor?: string; // optional 制造商
    phoneModel?: string; // optional 手机型号 如:MI13
    osType?: string; // optional 操作系统类型 Android IOS
    osVer?: string; // optional 操作系统版本
    channelId?: string; // optional 渠道号
    isp?: IspInfo[]; // optional isp 相关 会变
    oaid?: string; // optional 广告平台生成id
    vest?: string; // optional 马甲包标识
    appId?: string; // optional AppId 如:TT0066
    sim?: string; // optional sim卡信息
    scrl?: string; // optional 屏幕高度
    scrs?: string; // optional 屏幕宽度
    misc?: string; // optional 操作系统指纹信息
    apiVersion?: string; // optional 安卓api版本
    display?: string; // optional 上报android display（如NOH-AN00 2.0.0.268(C00E230R6P2)）参数
    isHarmony?: string; // optional 是否为鸿蒙系统,0:非鸿蒙,1:鸿蒙
    harmonyVersion?: string; // optional 鸿蒙版本
    idfa?: string; // optional ios IDFA标记
    idfv?: string; // optional ios IDFV标记
    deviceToken?: string; // optional ios deviceToken标记
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = obj["deviceId"];
        this["2"] = obj["imei"];
        this["3"] = obj["meid"];
        this["4"] = obj["brand"];
        this["5"] = obj["manufactor"];
        this["6"] = obj["phoneModel"];
        this["7"] = obj["osType"];
        this["8"] = obj["osVer"];
        this["9"] = obj["channelId"];
        if (Array.isArray(obj["isp"])) {
            this["10"] = obj["isp"].map(v => new IspInfo(v))
        }
        this["11"] = obj["oaid"];
        this["12"] = obj["vest"];
        this["13"] = obj["appId"];
        this["50"] = obj["sim"];
        this["51"] = obj["scrl"];
        this["52"] = obj["scrs"];
        this["53"] = obj["misc"];
        this["54"] = obj["apiVersion"];
        this["55"] = obj["display"];
        this["56"] = obj["isHarmony"];
        this["57"] = obj["harmonyVersion"];
        this["61"] = obj["idfa"];
        this["62"] = obj["idfv"];
        this["63"] = obj["deviceToken"];

        this.deviceId = obj["1"];
        this.imei = obj["2"];
        this.meid = obj["3"];
        this.brand = obj["4"];
        this.manufactor = obj["5"];
        this.phoneModel = obj["6"];
        this.osType = obj["7"];
        this.osVer = obj["8"];
        this.channelId = obj["9"];
        if (Array.isArray(obj["10"])) {
            this.isp = obj["10"].map(v => new IspInfo(v))
        }
        this.oaid = obj["11"];
        this.vest = obj["12"];
        this.appId = obj["13"];
        this.sim = obj["50"];
        this.scrl = obj["51"];
        this.scrs = obj["52"];
        this.misc = obj["53"];
        this.apiVersion = obj["54"];
        this.display = obj["55"];
        this.isHarmony = obj["56"];
        this.harmonyVersion = obj["57"];
        this.idfa = obj["61"];
        this.idfv = obj["62"];
        this.deviceToken = obj["63"];

    }
}

// 运营商信息
export class IspInfo {
    "1": string; // 运营商名称
    "2": string; // 连接类型
    name: string; // 运营商名称
    netType: string; // 连接类型
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = obj["name"];
        this["2"] = obj["netType"];

        this.name = obj["1"];
        this.netType = obj["2"];

    }
}

// 钥匙接口公共参数
export class WifiBaseParam {
    "1": string; // 设备语言, cn:中文, en:英文
    "2": string; // 设备mac
    "3": string; // 设备imei
    "4": string; // 当前连接的wifi ssid
    "5": string; // 当前连接的wifi ssid
    "6": string; // 当前设备网络模式,w:wifi,g:g网
    "7": number; // 客户端当前时间戳 毫秒
    "8": string; // mcc + mnc, 如4600
    "9": string; // android id
    "10": string; // dhid
    "11": string; // 当前AppId
    "12": number; // 版本号
    "13": string; // 渠道号
    lang: string; // 设备语言, cn:中文, en:英文
    mac: string; // 设备mac
    imei: string; // 设备imei
    capSsid: string; // 当前连接的wifi ssid
    capBssid: string; // 当前连接的wifi ssid
    netModel: string; // 当前设备网络模式,w:wifi,g:g网
    ts: number; // 客户端当前时间戳 毫秒
    sn: string; // mcc + mnc, 如4600
    aid: string; // android id
    dhid: string; // dhid
    appid: string; // 当前AppId
    verCode: number; // 版本号
    channel: string; // 渠道号
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = obj["lang"];
        this["2"] = obj["mac"];
        this["3"] = obj["imei"];
        this["4"] = obj["capSsid"];
        this["5"] = obj["capBssid"];
        this["6"] = obj["netModel"];
        this["7"] = obj["ts"];
        this["8"] = obj["sn"];
        this["9"] = obj["aid"];
        this["10"] = obj["dhid"];
        this["11"] = obj["appid"];
        this["12"] = obj["verCode"];
        this["13"] = obj["channel"];

        this.lang = obj["1"];
        this.mac = obj["2"];
        this.imei = obj["3"];
        this.capSsid = obj["4"];
        this.capBssid = obj["5"];
        this.netModel = obj["6"];
        this.ts = obj["7"];
        this.sn = obj["8"];
        this.aid = obj["9"];
        this.dhid = obj["10"];
        this.appid = obj["11"];
        this.verCode = obj["12"];
        this.channel = obj["13"];

    }
}

// UserInfo
export class UserInfo {
    "1": number; // uid
    "2"?: string; // optional 昵称
    "3"?: string; // optional 头像
    "4": number; // 性别 0:未知  1:男 2:女
    "5"?: string; // optional 用户手机号
    "6"?: VipDetail; // optional 会员信息
    "7": number; // 注册时间
    "8": string; // 钥匙uhid
    "9": string; // 钥匙dhid
    "10": number; // 年龄
    "11": string; // 微信openid
    "12": string; // 微信unionid
    "13"?: number; // optional 生日 毫秒
    "31": string; // 省份
    "32": string; // 城市
    "33": string; // 区号
    uid: number; // uid
    nickname?: string; // optional 昵称
    avatar?: string; // optional 头像
    sex: number; // 性别 0:未知  1:男 2:女
    phone?: string; // optional 用户手机号
    vip?: VipDetail; // optional 会员信息
    registedAt: number; // 注册时间
    uhid: string; // 钥匙uhid
    dhid: string; // 钥匙dhid
    age: number; // 年龄
    wechatOpenId: string; // 微信openid
    wechatUnionId: string; // 微信unionid
    birth?: number; // optional 生日 毫秒
    province: string; // 省份
    city: string; // 城市
    adcode: string; // 区号
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = obj["uid"];
        this["2"] = obj["nickname"];
        this["3"] = obj["avatar"];
        this["4"] = obj["sex"];
        this["5"] = obj["phone"];
        this["6"] = new VipDetail(obj["vip"]);
        this["7"] = obj["registedAt"];
        this["8"] = obj["uhid"];
        this["9"] = obj["dhid"];
        this["10"] = obj["age"];
        this["11"] = obj["wechatOpenId"];
        this["12"] = obj["wechatUnionId"];
        this["13"] = obj["birth"];
        this["31"] = obj["province"];
        this["32"] = obj["city"];
        this["33"] = obj["adcode"];

        this.uid = obj["1"];
        this.nickname = obj["2"];
        this.avatar = obj["3"];
        this.sex = obj["4"];
        this.phone = obj["5"];
        this.vip = new VipDetail(obj["6"]);
        this.registedAt = obj["7"];
        this.uhid = obj["8"];
        this.dhid = obj["9"];
        this.age = obj["10"];
        this.wechatOpenId = obj["11"];
        this.wechatUnionId = obj["12"];
        this.birth = obj["13"];
        this.province = obj["31"];
        this.city = obj["32"];
        this.adcode = obj["33"];

    }
}

// 用户token/cypher
export class UserToken {
    "1": string; // token
    "2": string; // cypher
    token: string; // token
    cypher: string; // cypher
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = obj["token"];
        this["2"] = obj["cypher"];

        this.token = obj["1"];
        this.cypher = obj["2"];

    }
}

// 版本信息
export class Version {
    "1": string; // 版本名称
    "2": number; // 版本编码
    versionName: string; // 版本名称
    versionCode: number; // 版本编码
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = obj["versionName"];
        this["2"] = obj["versionCode"];

        this.versionName = obj["1"];
        this.versionCode = obj["2"];

    }
}

// 当前设备扫到的wifi信息
export class WifiInfo {
    "1": string; // ssid
    "2": string; // bssid
    "3"?: string; // optional 加密类型n!可为空!
    "4"?: number; // optional 热点信号强度
    "6"?: number; // optional 强度db
    "7"?: string; // optional 加密类型
    ssid: string; // ssid
    bssid: string; // bssid
    capabilities?: string; // optional 加密类型n!可为空!
    rssi?: number; // optional 热点信号强度
    strength?: number; // optional 强度db
    encryptType?: string; // optional 加密类型
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = obj["ssid"];
        this["2"] = obj["bssid"];
        this["3"] = obj["capabilities"];
        this["4"] = obj["rssi"];
        this["6"] = obj["strength"];
        this["7"] = obj["encryptType"];

        this.ssid = obj["1"];
        this.bssid = obj["2"];
        this.capabilities = obj["3"];
        this.rssi = obj["4"];
        this.strength = obj["6"];
        this.encryptType = obj["7"];

    }
}

// zm验证码
export class ZmVerifyCode {
    "1": string; // 手机号
    "2": string; // 验证码
    "3": string; // 手机区号
    phone: string; // 手机号
    verifyCode: string; // 验证码
    zone: string; // 手机区号
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = obj["phone"];
        this["2"] = obj["verifyCode"];
        this["3"] = obj["zone"];

        this.phone = obj["1"];
        this.verifyCode = obj["2"];
        this.zone = obj["3"];

    }
}

// mob验证码
export class MobVerifyCode {
    "1": string; // 手机号
    "2": string; // 验证码
    "3": string; // 手机区号
    phone: string; // 手机号
    verifyCode: string; // 验证码
    zone: string; // 手机区号
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = obj["phone"];
        this["2"] = obj["verifyCode"];
        this["3"] = obj["zone"];

        this.phone = obj["1"];
        this.verifyCode = obj["2"];
        this.zone = obj["3"];

    }
}

// 验证码请求
export class VerifyCodeRequest {
    "1": number; // 验证码类型
    "2": MobVerifyCode; // mob验证码参数
    "3": ZmVerifyCode; // zm验证码参数
    type: number; // 验证码类型
    mobVerifyCode: MobVerifyCode; // mob验证码参数
    zmVerifyCode: ZmVerifyCode; // zm验证码参数
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = obj["type"];
        this["2"] = new MobVerifyCode(obj["mobVerifyCode"]);
        this["3"] = new ZmVerifyCode(obj["zmVerifyCode"]);

        this.type = obj["1"];
        this.mobVerifyCode = new MobVerifyCode(obj["2"]);
        this.zmVerifyCode = new ZmVerifyCode(obj["3"]);

    }
}

// vip详情
export class VipDetail {
    "1": string; // vip会员编号
    "2": number; // 0-非VIP；1-VIP会员； 2-SVIP
    "3"?: VipInfo; // optional vipinfo
    vipNo: string; // vip会员编号
    vipLevel: number; // 0-非VIP；1-VIP会员； 2-SVIP
    vipInfo?: VipInfo; // optional vipinfo
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = obj["vipNo"];
        this["2"] = obj["vipLevel"];
        this["3"] = new VipInfo(obj["vipInfo"]);

        this.vipNo = obj["1"];
        this.vipLevel = obj["2"];
        this.vipInfo = new VipInfo(obj["3"]);

    }
}

export class VipInfo {
    "1": number; // 会员状态， 0-非VIP；1-VIP会员； 2-VIP过期
    "2": number; // 会员开始时间，毫秒时间戳
    "3": number; // 会员结束时间，毫秒时间戳
    "4": number; // 1-包月会员 2-包季会员 3-包年会员
    "5": boolean; // false-非自动续费 true-自动续费
    vipState: number; // 会员状态， 0-非VIP；1-VIP会员； 2-VIP过期
    vipStartDate: number; // 会员开始时间，毫秒时间戳
    vipEndDate: number; // 会员结束时间，毫秒时间戳
    vipType: number; // 1-包月会员 2-包季会员 3-包年会员
    autoRenew: boolean; // false-非自动续费 true-自动续费
    constructor(value?: any) {
        if (value == null) value = {};
        let obj = typeof value == 'string' ? JSON.parse(value) : value;
        this["1"] = obj["vipState"];
        this["2"] = obj["vipStartDate"];
        this["3"] = obj["vipEndDate"];
        this["4"] = obj["vipType"];
        this["5"] = obj["autoRenew"];

        this.vipState = obj["1"];
        this.vipStartDate = obj["2"];
        this.vipEndDate = obj["3"];
        this.vipType = obj["4"];
        this.autoRenew = obj["5"];

    }
}


